------------------------------------------------------------------
-- SCRIPT PARA A CRIAÇÃO DAS TABELAS DOS CASOS DE USO NO HSQLDB --
------------------------------------------------------------------

CREATE TABLE Veterinario (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   nome VARCHAR(50) NOT NULL,
   cpf VARCHAR(14) NOT NULL,
   identidade VARCHAR(20) NOT NULL,
   usuario VARCHAR(20) NOT NULL,
   senha VARCHAR(20) NOT NULL,
   registro VARCHAR(10) NOT NULL,
   tipos_de_pet VARCHAR(50) NOT NULL,
   avaliacao INT NOT NULL
);

CREATE TABLE Promocao (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   percentual INT NOT NULL,
   data_inicial DATE,
   data_final DATE,
);

CREATE TABLE Pagamento (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   valor DOUBLE NOT NULL,
   id_promocao INT,
   FOREIGN KEY(id_promocao) REFERENCES Promocao(id)
);

CREATE TABLE Preco (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   atual DOUBLE NOT NULL,
   anterior DOUBLE NOT NULL,
   data_alteracao DATE,
   id_responsavel_alteracao INT,
   FOREIGN KEY(id_responsavel_alteracao) REFERENCES Veterinario(id)
);

CREATE TABLE Produto (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   nome VARCHAR(50) NOT NULL,
   fabricante VARCHAR(50) NOT NULL,
   especificacoes VARCHAR(50) NOT NULL,
   estoque INT NOT NULL,
   id_preco INT,
   FOREIGN KEY(id_preco) REFERENCES Preco(id)
);

CREATE TABLE Servico (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   tipo VARCHAR(20) NOT NULL,
   tempo_estimado INT NOT NULL,
   pontos_ganhos INT NOT NULL,
   valor_em_pontos INT NOT NULL,
   id_preco INT,
   id_responsavel INT,
   FOREIGN KEY(id_preco) REFERENCES Preco(id),
   FOREIGN KEY(id_responsavel) REFERENCES Veterinario(id)
);

CREATE TABLE ServicoProdutos (
   id_servico INT,
   id_produto INT,
   FOREIGN KEY(id_servico) REFERENCES Servico(id),
   FOREIGN KEY(id_produto) REFERENCES Produto(id)
);

CREATE TABLE Pet (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   tipo VARCHAR(20) NOT NULL,
   nome VARCHAR(50) NOT NULL,
   raca VARCHAR(20) NOT NULL,
   porte VARCHAR(20) NOT NULL,
   alergias VARCHAR(50) NOT NULL,
   descricao VARCHAR(50) NOT NULL,
   autoriza_foto BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE Cliente (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   nome VARCHAR(50) NOT NULL,
   identidade VARCHAR(20) NOT NULL,
   cpf VARCHAR(14) NOT NULL,
   endereco VARCHAR(50) NOT NULL,
   email VARCHAR(30) NOT NULL,
   pontos_acumulados INT NOT NULL
);

CREATE TABLE ClientePets (
   id_cliente INT,
   id_pet INT,
   FOREIGN KEY(id_cliente) REFERENCES Cliente(id),
   FOREIGN KEY(id_pet) REFERENCES Pet(id)
);

CREATE TABLE Agendamento (
   id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   realizado BOOLEAN DEFAULT FALSE NOT NULL,
   data DATE,
   id_cliente INT NOT NULL,
   id_pet INT NOT NULL,
   id_responsavel INT NOT NULL,
   FOREIGN KEY(id_cliente) REFERENCES Cliente(id),
   FOREIGN KEY(id_pet) REFERENCES Pet(id),
   FOREIGN KEY(id_responsavel) REFERENCES Veterinario(id)
);

CREATE TABLE AgendamentoServicos (
   id_agendamento INT,
   id_servico INT,
   FOREIGN KEY(id_agendamento) REFERENCES Agendamento(id),
   FOREIGN KEY(id_servico) REFERENCES Servico(id)
);

CREATE TABLE AgendamentoProdutos (
   id_agendamento INT,
   id_produto INT,
   FOREIGN KEY(id_agendamento) REFERENCES Agendamento(id),
   FOREIGN KEY(id_produto) REFERENCES Produto(id)
);

CREATE TABLE AgendamentoPagamentos (
   id_agendamento INT,
   id_pagamento INT,
   FOREIGN KEY(id_agendamento) REFERENCES Agendamento(id),
   FOREIGN KEY(id_pagamento) REFERENCES Pagamento(id)
);
